source("Load_Aframomum_data")
source("Load_Aframomum_data.r")#runs the script to load all the data
str(biomass)
boxplot(AvgOfRootsWeight~Category,biomass,main="Root weight")
boxplot(AvgOfStemWeight~Category,biomass,main="Stem weight")
boxplot(AvgOfLeavesWeight~Category,biomass,main="Leaves weight")
biomass$Above->(biomass$AvgOfStemWeight+biomass$AvgOfLeavesWeight)
biomass$Above<-(biomass$AvgOfStemWeight+biomass$AvgOfLeavesWeight)
plot(biomass$Above~biomass$AvgOfRootsWeight)
str(perform)#str means 'show me what this object is made of'
perform$Above<-(perform$StemWeight+perform$LeavesWeight)
plot(perform$Above~perform$RootsWeight)
plot(perform$Above~perform$RootsWeight, col=perform$TransID)
library(nlme)
explore.biomass.lme->lme((Above/RootsWeight)~Site_ID|TransID, data=perform)
explore.biomass.lme<-lme((Above/RootsWeight)~Site_ID|TransID, data=perform)
source('C:/stat/Aframomum/Biomass_performance/DataExploration_2.R')
library(readxl)
df<-read_excel("Aframomum_test_data")
getwd()
df<-read_excel("Aframomum_test_data.xls")
df<-read_excel("Aframomum_test_data.xlsx")
df<-read_excel("Aframomum_test_data.xlsx")
df<-read_excel("Aframomum_test_data.xls")
df<-read_excel("test_data.xls")
df<-read_excel("test_data.xlsx")
df
g<-ggplot(test_data.xlsx)
library(ggplot2)
g<-ggplot(test_data.xlsx)
g<-ggplot("test_data.xlsx")
g<-ggplot(df)
aes(x=compartment, y = species)
g<-ggplot(df)
aes(x=compartment, y = species)
aes(x=compartment, y = species)+geom_bar()
aes(x=compartment, y = species)+geom_histogram()
aes(x=compartment, y = species))
aes(x=compartment, y = species))+geom_count()
aes(x=compartment, y = species))+geom_dotplot()
aes(x=compartment, y = transect))+geom_histogram()
aes(x=compartment, y = transect)+geom_histogram()
aes(x=compartment, y = transect)+ geom_histogram
head(df)
aes(x=compartment, y = transect)+ geom_bar()
aes(x=Family, y = transect)+ geom_bar()
head(df)
library(ggplot2)
g<-ggplot (df,
aes(x=Compartment)+ geom_bar()
aes(x=Compartment))+ geom_bar()
aes(x=Compartment,fill=Species))+geom_bar()
g<-ggplot (df,aes(x=Compartment,fill=Species))+geom_bar()
g
ggplot (df,aes(x=Compartment,fill=Transect))+geom_bar()
head(df)
ggplot (df,aes(x=Species,fill=Transect))+geom_bar()
ggplot (df,aes(x=Species,fill=Compartment))+geom_bar()
ggplot (df,aes(x=Species,fill=as.factor(Compartment))+geom_bar()
ggplot (df,aes(x=Species, fill=as.factor(Compartment))+
ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
geom_bar()
g<-ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
g
x11()
ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
x11()
ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
library(ggplot2)
library(ggplot2)
g<-ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
geom_bar()
g+theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1))
library(ggplot2)
g<-ggplot (df,aes(x=Species, fill=as.factor(Transect)))+
geom_bar()
g+theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1))
g<-ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
geom_bar()
g+theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1))
ggplot(biomass$above, aes(x StemWeight, fill =as.factor(fortype)))
g+coord_flip()
biomass$Above<-(biomass$AvgOfStemWeight+biomass$AvgOfLeavesWeight)
ggplot(biomass$above, aes(x StemWeight, fill = as.factor(fortype)))#
ggplot(biomass$above, aes(x StemWeight, fill = as.factor(fortype)))
ggplot(biomass, aes(x = StemWeight, fill = as.factor(fortype)))
biomass
library(vegan)
source("Load_Aframomum_data.r")#runs the script to load all the data
mean(stemlength)
median(stemlength)
barplot(spChar,col=1)
barplot(spChar,col=5)
barplot(spChar,col="green")
barplot(spChar,col=8)
#boxplots of everything vs forest type
x11(width=5,height=9);par(mfrow=c(3,2),mar=c(2,1,2,0.5),mgp=c(1,.3,0),oma=c(0,2,0,0),cex=.7,tcl=.25,xpd=T,las=1.55)
fortype<-xtabs(AvgOfStemLength~Category,compart2)
boxplot(AvgOfStemLength~Category,compart2,main="Stem length",notch=FALSE)
fortype<-xtabs(AvgOfLong_leaf~Category,compart2)
boxplot(AvgOfLong_leaf~Category,compart2,main="Leaf length", notch=FALSE)
masstype<-xtabs(AvgOfLeavesWeight~Category,biomass)
boxplot(AvgOfLong_leaf~Category,compart2,main="Leaf length",notch=FALSE)
masstype<-xtabs(AvgOfRootsWeight~Category,biomass)
boxplot(AvgOfRootsWeight~Category,biomass,main="Root weight")
boxplot(AvgOfStemWeight~Category,biomass,main="Stem weight")
boxplot(AvgOfLeavesWeight~Category,biomass,main="Leaves weight")
ggplot(perform, aes(x = StemWeight, fill = as.factor(fortype)))
g+theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1))
g+coord_flip()
ggplot(perform, aes(x = StemWeight, fill = as.factor(fortype)))#
str(df)
source('C:/stat/Aframomum/Biomass_performance/DataExploration_2.R')
g<-ggplot(afram.con, aes(x=StemWeight, fill =as.factor(fortype)))
g<-ggplot(aframomum, aes(x=StemWeight, fill =as.factor(fortype)))
g<-ggplot(Aframomum, aes(x=StemWeight, fill =as.factor(fortype)))
source("Load_Aframomum.data.r")
source("Load_Aframomum")
source("Aframomum")
library(ggplot2)
g<-ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
geom_bar()
g+theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1))
ggplot(perform, aes(x = StemWeight, fill = as.factor(fortype)))#
str(perform)
ls()
str(fortype)
head(fortype)
str(Aframomum)
str(biomass)
str(afram.con)
g<-ggplot (df,aes(x=Species, fill=as.factor(Compartment)))+
geom_bar()
g+theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1))
df
library(dplyr)
library(DBI)
library(DBI)
library(dplyr)
library("DBI", lib.loc="~/R/win-library/3.2")
detach("package:DBI", unload=TRUE)
library("DBI", lib.loc="~/R/win-library/3.2")
remove.packages("DBI", lib="~/R/win-library/3.2")
library(DBI)
library(dplyr)
version
.lib
.libPaths()
source('C:/stat/Aframomum/Biomass_performance/DataExploration_2.R')
install.packages("H:/assertthat_0.1.zip", repos = NULL, type = "win.binary")
install.packages("H:/DBI_0.5-1.zip", repos = NULL, type = "win.binary")
install.packages("H:/lazyeval_0.2.0.zip", repos = NULL, type = "win.binary")
install.packages("H:/magrittr_1.5.zip", repos = NULL, type = "win.binary")
install.packages("H:/R6_2.2.0.zip", repos = NULL, type = "win.binary")
install.packages("H:/tibble_1.2.zip", repos = NULL, type = "win.binary")
install.packages("H:/tidyr_0.6.0.zip", repos = NULL, type = "win.binary")
install.packages("H:/dplyr_0.5.0.zip", repos = NULL, type = "win.binary")
install.packages("ggplot2")
install.packages("I:/00Amys folder/binaries for offline/colorspace_1.2-7.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/dichromat_2.0-0.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/digest_0.6.10.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/gtable_0.2.0.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/labeling_0.3.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/munsell_0.4.3.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/RColorBrewer_1.1-2.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/Rcpp_0.12.7.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/readxl_0.1.1.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/reshape2_1.4.1.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/RODBC_1.3-14.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/RODBC_1.3-14.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/scales_0.4.0.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/plyr_1.8.4.zip", repos = NULL, type = "win.binary")
install.packages("I:/00Amys folder/binaries for offline/ggplot2_2.1.0.zip", repos = NULL, type = "win.binary")
df%>%
group_by(Compartment)
df
group_by(Compartment)
df
group_by(Compartment)
group_by(compartment)%>%
df
df
o
group_by(compartment)
df
group_by(compartment)
traceback()
performsizes2011<-sqlQuery(research.con,"select * from Performance*Category and location")
library(RODBC)
research.con<-odbcConnectAccess("research2016.mdb")
biomass.con<-odbcConnectAccess("Biomass2016.mdb")
performsizes2011<-sqlQuery(research.con,"select * from performance")
performbiomass2013<-sqlQuery(biomass.con,"select * from Performance1")
#MAKE THE SAME KIND OF COMMAND TO EXTRACT ALL THE OTHER TABLES FROM BIOMASS AND RESEARCH (4 OF EACH IN TOTAL, USE THE SAME .CON FOR ALL)
performsizes2011<-sqlQuery(research.con,"select * from Performance*Category and location")
str(performsizes2011)
performs2011<-sqlQuery(research.con,"select * from PerformanceplusCategoryandLocation")
str(performs2011)
performs2011<-sqlQuery(research.con,"select * from PerformanceplusCategoryandLocation")
str(performs2011)
performCat2013<-sqlQuery(biomass.con,"select * from PerformanceplusCategoryandLocation")
str(performCat2013)
performCat2011<-sqlQuery(research.con,"select * from PerformanceplusCategoryandLocation")
str(performCat2011)
closeAllConnections()
ls()
source("Load_Aframomum_data.r")#runs the script to load all the data
str(performCat2011)
environ2011<-sqlQuery(research.con, "select * from environmental data")
str(environ2011)
environ2011<-sqlQuery(research.con, "select * from Environmental data")
str(environ2011)
environ2011<-sqlQuery(research.con, "select * from Environmental_data")
str(environ2011)
